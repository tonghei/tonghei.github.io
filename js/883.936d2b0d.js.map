{"version":3,"file":"js/883.936d2b0d.js","mappings":"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","sources":["webpack://todolist/./src/pages/DataStatistical.vue","webpack://todolist/src/pages/DataStatistical.vue","webpack://todolist/./src/pages/DataStatistical.vue?61fe","webpack://todolist/./src/pages/DataStatistical.vue?315d"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',[_c('ul',{staticClass:\"canvas-type\"},[_c('li',{class:{ isActive: _vm.isActive == 0 },on:{\"click\":function($event){return _vm.changeCanves(0)}}},[_vm._v(\" 折线图 \")]),_c('li',{class:{ isActive: _vm.isActive == 1 },on:{\"click\":function($event){return _vm.changeCanves(1)}}},[_vm._v(\" 柱状图 \")])]),_vm._m(0),_c('canvas',{attrs:{\"width\":\"800px\",\"height\":\"500px\"}},[_vm._v(\"当前浏览器版本过低,请升级浏览器后打开哦\")]),_c('div',{staticClass:\"collect\"},[_c('ul',[_c('li',[_vm._v(\" 昨日完成待办 \"),_c('span',[_c('em',[_vm._v(_vm._s(_vm.yesterdayList.complete)+\" \")]),_vm._v(\"件\")])]),_c('li',[_vm._v(\" 昨日完成率 \"),_c('span',[_c('em',[_vm._v(_vm._s(_vm.yesterdayList.percentage)+\" \")]),_vm._v(\"%\")])]),_c('li',[_vm._v(\" 今日完成待办 \"),_c('span',[_c('em',[_vm._v(_vm._s(_vm.todayList)+\" \")]),_vm._v(\"件\")])]),_c('li',[_vm._v(\" 总待办数 \"),_c('span',[_c('em',[_vm._v(_vm._s(_vm.todolist.length)+\" \")]),_vm._v(\"件\")])])])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('ul',{staticClass:\"canvas-hint\"},[_c('li',[_c('span'),_vm._v(\"当前天总事件\")]),_c('li',[_c('span'),_vm._v(\"当前完成事件\")])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <ul class=\"canvas-type\">\r\n      <li @click=\"changeCanves(0)\" :class=\"{ isActive: isActive == 0 }\">\r\n        折线图\r\n      </li>\r\n      <li @click=\"changeCanves(1)\" :class=\"{ isActive: isActive == 1 }\">\r\n        柱状图\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"canvas-hint\">\r\n      <li><span></span>当前天总事件</li>\r\n      <li><span></span>当前完成事件</li>\r\n    </ul>\r\n    <canvas width=\"800px\" height=\"500px\"\r\n      >当前浏览器版本过低,请升级浏览器后打开哦</canvas\r\n    >\r\n    <div class=\"collect\">\r\n      <ul>\r\n        <li>\r\n          昨日完成待办\r\n          <span\r\n            ><em>{{ yesterdayList.complete }} </em>件</span\r\n          >\r\n        </li>\r\n        <li>\r\n          昨日完成率 <span><em>{{yesterdayList.percentage}} </em>%</span>\r\n        </li>\r\n        <li>\r\n          今日完成待办\r\n          <span\r\n            ><em>{{ todayList }} </em>件</span\r\n          >\r\n        </li>\r\n        <li>\r\n          总待办数\r\n          <span\r\n            ><em>{{ todolist.length }} </em>件</span\r\n          >\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\nexport default {\r\n  name: \"DataStatistical\",\r\n\r\n  data() {\r\n    return {\r\n      isActive: 0,\r\n      canvas: null,\r\n      canvasContext: null,\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.canvas = document.querySelector(\"canvas\");\r\n    this.canvasContext = this.canvas.getContext(\"2d\");\r\n    this.drawLineChart();\r\n  },\r\n\r\n  computed: {\r\n    ...mapState([\"nowday\", \"todolist\"]),\r\n    // 计算每周数组\r\n    nowWeek() {\r\n      let endDay = Number(this.nowday.split(\".\")[2]);\r\n      let startDay = endDay - 6;\r\n      let daterArr = [];\r\n      if (startDay > 1) {\r\n        for (let i = startDay; i <= endDay; i++) {\r\n          let obj = {};\r\n          let dater = this.nowday.split(\".\")[0] + this.nowday.split(\".\")[1] + i;\r\n          let daterList = this.todolist.filter((item) => {\r\n            return item.dater == dater;\r\n          });\r\n          let daterCompleteList = daterList.filter((item) => {\r\n            return item.isChecked;\r\n          });\r\n          dater =\r\n            this.nowday.split(\".\")[0] +\r\n            \".\" +\r\n            this.nowday.split(\".\")[1] +\r\n            \".\" +\r\n            i;\r\n          obj.dater = dater;\r\n          obj.allList = daterList.length;\r\n          obj.CompleteList = daterCompleteList.length;\r\n          daterArr.push(obj);\r\n        }\r\n      } else {\r\n        let year = this.nowday.split(\".\")[0];\r\n        let month = this.nowday.split(\".\")[1];\r\n        let startmonth = month - 1;\r\n        let startyear = year;\r\n        let arr = [1, 3, 5, 7, 8, 10, 12];\r\n        // 当前月为1月时\r\n        if (startmonth <= 0) {\r\n          startmonth = 12;\r\n          startyear = year - 1;\r\n\r\n          startDay = startDay + 31;\r\n          for (let i = 0; i < 7; i++) {\r\n            let obj = {};\r\n            let dater = startyear + startmonth + startDay;\r\n            let daterList = this.todolist.filter((item) => item.dater == dater);\r\n            let daterCompleteList = daterList.filter((item) => item.isChecked);\r\n            dater = startyear + \".\" + startmonth + \".\" + startDay;\r\n            obj.dater = dater;\r\n            obj.allList = daterList.length;\r\n            obj.CompleteList = daterCompleteList.length;\r\n            daterArr.push(obj);\r\n            startDay++;\r\n            if (startDay > 31) {\r\n              startDay = 1;\r\n              startmonth = 1;\r\n              startyear++;\r\n            }\r\n          }\r\n        } else {\r\n          if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\r\n            // 闰年29\r\n            if (startmonth == 2) {\r\n              startDay = startDay + 29;\r\n              for (let i = 0; i < 7; i++) {\r\n                let obj = {};\r\n                let dater = startyear + startmonth + startDay;\r\n                let daterList = this.todolist.filter(\r\n                  (item) => item.dater == dater\r\n                );\r\n                let daterCompleteList = daterList.filter(\r\n                  (item) => item.isChecked\r\n                );\r\n                dater = startyear + \".\" + startmonth + \".\" + startDay;\r\n                obj.dater = dater;\r\n                obj.allList = daterList.length;\r\n                obj.CompleteList = daterCompleteList.length;\r\n                startDay++;\r\n                if (startDay > 29) {\r\n                  startDay = 1;\r\n                  startmonth++;\r\n                }\r\n                daterArr.push(obj);\r\n              }\r\n              // 闰年31天\r\n            } else if (arr.includes(startmonth)) {\r\n              startDay = startDay + 31;\r\n              for (let i = 0; i < 7; i++) {\r\n                let obj = {};\r\n                let dater = startyear + startmonth + startDay;\r\n                let daterList = this.todolist.filter(\r\n                  (item) => item.dater == dater\r\n                );\r\n                let daterCompleteList = daterList.filter(\r\n                  (item) => item.isChecked\r\n                );\r\n                dater = startyear + \".\" + startmonth + \".\" + startDay;\r\n                obj.dater = dater;\r\n                obj.allList = daterList.length;\r\n                obj.CompleteList = daterCompleteList.length;\r\n                daterArr.push(obj);\r\n                startDay++;\r\n                if (startDay > 31) {\r\n                  startDay = 1;\r\n                  startmonth++;\r\n                }\r\n              }\r\n              // 闰年30天\r\n            } else {\r\n              startDay = startDay + 30;\r\n              for (let i = 0; i < 7; i++) {\r\n                let obj = {};\r\n                let dater = startyear + startmonth + startDay;\r\n                let daterList = this.todolist.filter(\r\n                  (item) => item.dater == dater\r\n                );\r\n                let daterCompleteList = daterList.filter(\r\n                  (item) => item.isChecked\r\n                );\r\n                dater = startyear + \".\" + startmonth + \".\" + startDay;\r\n                obj.dater = dater;\r\n                obj.allList = daterList.length;\r\n                obj.CompleteList = daterCompleteList.length;\r\n                daterArr.push(obj);\r\n                startDay++;\r\n                if (startDay > 30) {\r\n                  startDay = 1;\r\n                  startmonth++;\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            // 平年\r\n            if (startmonth == 2) {\r\n              startDay = startDay + 28;\r\n              for (let i = 0; i < 7; i++) {\r\n                let obj = {};\r\n                let dater = startyear + startmonth + startDay;\r\n                let daterList = this.todolist.filter(\r\n                  (item) => item.dater == dater\r\n                );\r\n                let daterCompleteList = daterList.filter(\r\n                  (item) => item.isChecked\r\n                );\r\n                dater = startyear + \".\" + startmonth + \".\" + startDay;\r\n                obj.dater = dater;\r\n                obj.allList = daterList.length;\r\n                obj.CompleteList = daterCompleteList.length;\r\n                daterArr.push(obj);\r\n                startDay++;\r\n                if (startDay > 28) {\r\n                  startDay = 1;\r\n                  startmonth++;\r\n                }\r\n              }\r\n\r\n              // 闰年31天\r\n            } else if (arr.includes(startmonth)) {\r\n              startDay = startDay + 31;\r\n              for (let i = 0; i < 7; i++) {\r\n                let obj = {};\r\n                let dater = startyear + startmonth + startDay;\r\n                let daterList = this.todolist.filter(\r\n                  (item) => item.dater == dater\r\n                );\r\n                let daterCompleteList = daterList.filter(\r\n                  (item) => item.isChecked\r\n                );\r\n                dater = startyear + \".\" + startmonth + \".\" + startDay;\r\n                obj.dater = dater;\r\n                obj.allList = daterList.length;\r\n                obj.CompleteList = daterCompleteList.length;\r\n                daterArr.push(obj);\r\n                startDay++;\r\n                if (startDay > 31) {\r\n                  startDay = 1;\r\n                  startmonth++;\r\n                }\r\n              }\r\n\r\n              // 闰年30天\r\n            } else {\r\n              startDay = startDay + 30;\r\n              for (let i = 0; i < 7; i++) {\r\n                let obj = {};\r\n                let dater = startyear + startmonth + startDay;\r\n                let daterList = this.todolist.filter(\r\n                  (item) => item.dater == dater\r\n                );\r\n                let daterCompleteList = daterList.filter(\r\n                  (item) => item.isChecked\r\n                );\r\n                dater = startyear + \".\" + startmonth + \".\" + startDay;\r\n                obj.dater = dater;\r\n                obj.allList = daterList.length;\r\n                obj.CompleteList = daterCompleteList.length;\r\n                daterArr.push(obj);\r\n                startDay++;\r\n                if (startDay > 30) {\r\n                  startDay = 1;\r\n                  startmonth++;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      return daterArr;\r\n    },\r\n    // 昨日完成\r\n    yesterdayList() {\r\n      if (this.nowday.split[2] != 1) {\r\n        let res = this.todolist.filter(\r\n          (item) =>\r\n            item.dater ==\r\n            \"\" +\r\n              this.nowday.split(\".\")[0] +\r\n              this.nowday.split(\".\")[1] +\r\n              (this.nowday.split(\".\")[2] - 1)\r\n        );\r\n        let yesterday = res.filter((item) => item.isChecked);\r\n        let percentage = Math.floor((yesterday.length / res.length)*100);\r\n        if(!res.length){percentage = 0}\r\n        return { complete: yesterday.length, overall: res.length, percentage };\r\n      }\r\n    },\r\n    // 今日列表\r\n    todayList() {\r\n      console.log(this.todolist);\r\n      let res = this.todolist.filter(\r\n        (item) =>\r\n          item.dater ==\r\n          \"\" +\r\n            this.nowday.split(\".\")[0] +\r\n            this.nowday.split(\".\")[1] +\r\n            this.nowday.split(\".\")[2]\r\n      );\r\n      let today = res.filter((item) => item.isChecked);\r\n      console.log(res, today);\r\n      return today.length;\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    // 封装一个画线的方法\r\n    drawSolidLine(x1, y1, x2, y2, color, width) {\r\n      // 开始绘图\r\n      this.canvasContext.beginPath();\r\n      // 起始位置\r\n      this.canvasContext.moveTo(x1, y1);\r\n      // 结束位置\r\n      this.canvasContext.lineTo(x2, y2);\r\n      // 笔刷颜色\r\n      this.canvasContext.strokeStyle = color;\r\n      // 笔刷宽度\r\n      this.canvasContext.lineWidth = width;\r\n      // 开始绘图\r\n      this.canvasContext.stroke();\r\n      // 结束绘图\r\n      this.canvasContext.closePath();\r\n    },\r\n    // 画虚线 (x1,y1 起始点坐标)(x2,y2 结束点坐标) 虚线颜色 宽度 分多少段\r\n    drawDottedLine(x1, y1, x2, y2, color, width, section) {\r\n      //存储起始位置\r\n      let startSolidX = x1;\r\n      let startSolidY = y1;\r\n      //   计算每段距离\r\n      let piecewiseX = (x1 - x2) / section;\r\n      let piecewiseY = (y1 - y2) / section;\r\n      // 循环指定次数\r\n      for (let i = 1; i <= section; i++) {\r\n        // 计算结束位置\r\n        let endX = x1 - piecewiseX * i;\r\n        let endY = y1 - piecewiseY * i;\r\n        // 每间隔一次画线\r\n        if (i % 2 != 0) {\r\n          this.drawSolidLine(\r\n            startSolidX,\r\n            startSolidY,\r\n            endX,\r\n            endY,\r\n            color,\r\n            width\r\n          );\r\n        }\r\n        // 每次更新起始位置\r\n        startSolidX = endX;\r\n        startSolidY = endY;\r\n      }\r\n    },\r\n    // 绘制折线图\r\n    drawLineChart() {\r\n      this.clearCanvas();\r\n      this.canvasContext.font = \"16px serif\";\r\n      this.canvasContext.fillStyle = \"rgb(51, 118, 247)\";\r\n      // 文本位置\r\n      let fontx = 35;\r\n      // 折线图点位置\r\n      let rec = [137, 450];\r\n      let fonty = 470;\r\n      let numx = 35;\r\n      let numy = 458;\r\n\r\n      for (let i = 1; i < 10; i++) {\r\n        numy -= 40;\r\n        this.canvasContext.fillText(i, numx, numy);\r\n      }\r\n      let nowrec = [];\r\n      let nowrec1 = [];\r\n      this.nowWeek.forEach((item, index) => {\r\n        fontx += 86;\r\n        // 绘制文本\r\n        this.canvasContext.fillStyle = \"rgb(51, 118, 247)\";\r\n        this.canvasContext.strokeStyle = \"rgb(51, 118, 247)\";\r\n        this.canvasContext.fillText(\r\n          `${item.dater.split(\".\")[1]}.${item.dater.split(\".\")[2]}`,\r\n          fontx,\r\n          fonty\r\n        );\r\n\r\n        if (index != 0) {\r\n          // 绘制折线图\r\n          this.drawSolidLine(\r\n            nowrec[0],\r\n            nowrec[1],\r\n            rec[0] + index * 87,\r\n            rec[1] - item.allList * 40,\r\n            \"#2c9678\",\r\n            2\r\n          );\r\n          nowrec[0] = rec[0] + index * 87;\r\n          nowrec[1] = rec[1] - item.allList * 40;\r\n          this.canvasContext.beginPath();\r\n          this.canvasContext.fillStyle = \"#2c9678\";\r\n          this.canvasContext.strokeStyle = \"#2c9678\";\r\n          this.canvasContext.arc(nowrec[0], nowrec[1], 3, 0, 2 * Math.PI);\r\n          this.canvasContext.fill();\r\n          this.canvasContext.stroke();\r\n        } else {\r\n          nowrec[0] = rec[0] + index * 87;\r\n          nowrec[1] = rec[1] - item.allList * 40;\r\n          this.canvasContext.beginPath();\r\n          this.canvasContext.fillStyle = \"#2c9678\";\r\n          this.canvasContext.strokeStyle = \"#2c9678\";\r\n          this.canvasContext.arc(nowrec[0], nowrec[1], 3, 0, 2 * Math.PI);\r\n          this.canvasContext.fill();\r\n          this.canvasContext.stroke();\r\n        }\r\n\r\n        if (index != 0) {\r\n          // 绘制折线图\r\n          this.drawSolidLine(\r\n            nowrec1[0],\r\n            nowrec1[1],\r\n            rec[0] + index * 87,\r\n            rec[1] - item.CompleteList * 40,\r\n            \"#e7a23f\",\r\n            2\r\n          );\r\n          nowrec1[0] = rec[0] + index * 87;\r\n          nowrec1[1] = rec[1] - item.CompleteList * 40;\r\n          this.canvasContext.beginPath();\r\n          this.canvasContext.fillStyle = \"#e7a23f\";\r\n          this.canvasContext.strokeStyle = \"#e7a23f\";\r\n          this.canvasContext.arc(nowrec1[0], nowrec1[1], 3, 0, 2 * Math.PI);\r\n          this.canvasContext.fill();\r\n          this.canvasContext.stroke();\r\n        } else {\r\n          nowrec1[0] = rec[0] + index * 87;\r\n          nowrec1[1] = rec[1] - item.CompleteList * 40;\r\n          this.canvasContext.beginPath();\r\n          this.canvasContext.fillStyle = \"#e7a23f\";\r\n          this.canvasContext.strokeStyle = \"#e7a23f\";\r\n          this.canvasContext.arc(nowrec1[0], nowrec1[1], 3, 0, 2 * Math.PI);\r\n          this.canvasContext.fill();\r\n          this.canvasContext.stroke();\r\n        }\r\n      });\r\n      this.drawCoordinate();\r\n    },\r\n    // 绘制柱状图\r\n    diawHistogram() {\r\n      this.clearCanvas();\r\n      this.canvasContext.font = \"16px serif\";\r\n      this.canvasContext.fillStyle = \"rgb(51, 118, 247)\";\r\n      // 文本位置\r\n      let fontx = 35;\r\n      // 折线图点位置\r\n      let fonty = 470;\r\n      let numx = 35;\r\n      let numy = 458;\r\n      let allx = 105;\r\n      let ally = 450;\r\n      let comx = 135;\r\n      let comy = 450;\r\n\r\n      for (let i = 1; i < 10; i++) {\r\n        numy -= 40;\r\n        this.canvasContext.fillText(i, numx, numy);\r\n      }\r\n      console.log(this.nowWeek);\r\n      this.nowWeek.forEach((item) => {\r\n        fontx += 86;\r\n        // 绘制文本\r\n        this.canvasContext.fillStyle = \"rgb(51, 118, 247)\";\r\n        this.canvasContext.strokeStyle = \"rgb(51, 118, 247)\";\r\n        // 绘制文本\r\n        this.canvasContext.fillText(\r\n          `${item.dater.split(\".\")[1]}.${item.dater.split(\".\")[2]}`,\r\n          fontx,\r\n          fonty\r\n        );\r\n        // 绘制柱状图\r\n        let allheight = item.allList * 40;\r\n        if (!allheight) {\r\n          allheight = 2;\r\n        }\r\n        this.canvasContext.fillStyle = \"#2c9678\";\r\n        this.canvasContext.fillRect(allx, 450 - allheight, 30, allheight);\r\n        let comheight = item.CompleteList * 40;\r\n        if (!comheight) {\r\n          comheight = 2;\r\n        }\r\n        this.canvasContext.fillStyle = \"#e7a23f\";\r\n        this.canvasContext.fillRect(comx, 450 - comheight, 30, comheight);\r\n        comx += 85;\r\n        allx += 85;\r\n      });\r\n\r\n      this.drawCoordinate();\r\n    },\r\n    // 绘制坐标轴\r\n    drawCoordinate() {\r\n      // 坐标轴主体\r\n      this.drawSolidLine(50, 50, 50, 450, \"rgb(52, 118, 244)\", 2);\r\n      this.drawSolidLine(50, 450, 750, 450, \"rgb(52, 118, 244)\", 2);\r\n      // 绘制x轴箭头\r\n      this.drawSolidLine(750, 450, 735, 458, \"rgb(52, 118, 244)\", 2);\r\n      this.drawSolidLine(750, 450, 735, 442, \"rgb(52, 118, 244)\", 2);\r\n      // 绘制y轴箭头\r\n      this.drawSolidLine(50, 50, 58, 65, \"rgb(52, 118, 244)\", 2);\r\n      this.drawSolidLine(42, 65, 50, 50, \"rgb(52, 118, 244)\", 2);\r\n    },\r\n    // 重绘画布\r\n    clearCanvas() {\r\n      this.canvasContext.fillStyle = \"#fff\";\r\n      this.canvasContext.fillRect(0, 0, 800, 500);\r\n    },\r\n    // 切换绘图\r\n    changeCanves(type) {\r\n      this.isActive = type;\r\n      if (type == 1) {\r\n        this.diawHistogram();\r\n      } else {\r\n        this.drawLineChart();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n// 切换canvas分类\r\n.canvas-type {\r\n  position: absolute;\r\n  display: flex;\r\n  top: 120px;\r\n  left: 64%;\r\n  li {\r\n    border: 1px solid #ccc;\r\n    width: 40px;\r\n    height: 20px;\r\n    line-height: 20px;\r\n    text-align: center;\r\n    border-radius: 0 3px 3px 0;\r\n    cursor: pointer;\r\n\r\n    &:nth-child(1) {\r\n      border-right: none;\r\n      border-radius: 3px 0 0 3px;\r\n    }\r\n  }\r\n}\r\n\r\n// canvas提示\r\n.canvas-hint {\r\n  position: absolute;\r\n  top: 160px;\r\n  left: 64%;\r\n\r\n  li {\r\n    span {\r\n      display: inline-block;\r\n      width: 20px;\r\n      height: 10px;\r\n      background-color: #2c9678;\r\n      margin-right: 10px;\r\n    }\r\n    &:nth-child(2) span {\r\n      background-color: #e7a23f;\r\n    }\r\n  }\r\n}\r\n\r\ncanvas {\r\n  float: left;\r\n  border-radius: 10px;\r\n  margin: 30px;\r\n  display: block;\r\n  background-color: #fff;\r\n}\r\n\r\n.collect {\r\n  float: right;\r\n  margin: 30px 60px 0 0;\r\n  width: 250px;\r\n  height: 500px;\r\n  background: #fff;\r\n  border-radius: 10px;\r\n\r\n  ul {\r\n    li {\r\n      box-sizing: border-box;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      width: 100%;\r\n      height: 125px;\r\n      border-bottom: 2px solid #ccc;\r\n      line-height: 125px;\r\n      padding: 0 40px 0 20px;\r\n      font-size: 14px;\r\n      color: rgb(92, 97, 104);\r\n\r\n      &:nth-child(4) {\r\n        border-bottom: none;\r\n      }\r\n\r\n      em {\r\n        font-size: 22px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.isActive {\r\n  color: #fff;\r\n  background-color: #3476f4;\r\n}\r\n</style>\r\n\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DataStatistical.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./DataStatistical.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DataStatistical.vue?vue&type=template&id=46416826&scoped=true&\"\nimport script from \"./DataStatistical.vue?vue&type=script&lang=js&\"\nexport * from \"./DataStatistical.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DataStatistical.vue?vue&type=style&index=0&id=46416826&prod&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"46416826\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","class","isActive","on","$event","changeCanves","_v","_m","attrs","_s","yesterdayList","complete","percentage","todayList","todolist","length","staticRenderFns","name","data","canvas","canvasContext","mounted","computed","nowWeek","dater","i","obj","daterArr","startmonth","startyear","startDay","item","overall","console","methods","drawSolidLine","drawDottedLine","startSolidX","startSolidY","endX","endY","color","width","drawLineChart","numy","fontx","fonty","nowrec","rec","nowrec1","diawHistogram","allheight","comheight","comx","allx","drawCoordinate","clearCanvas","component"],"sourceRoot":""}